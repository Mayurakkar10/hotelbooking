package com.example.demo.controller;
import com.example.demo.model.HotelsModel;
import com.example.demo.repository.HotelsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@RestController
@CrossOrigin
public class HotelsController {

    @Autowired
    private HotelsRepository hotelsRepository;

    @PostMapping("/addHotels")
    public String addHotel(@RequestBody HotelsModel hotel) {
        boolean added = hotelsRepository.addHotel(hotel);
        return added ? "Hotel added successfully" : "Failed to add hotel";
    }
    
    @PostMapping("/addHotels/{ownerId}")
    public String addHotel(@PathVariable int ownerId, @RequestBody HotelsModel hotel) {
        hotel.setOwner_id(ownerId); 
        boolean added = hotelsRepository.addHotel(hotel);
        return added ? "Hotel added successfully" : "Failed to add hotel";
    }

    
    @GetMapping("/getAllHotels")
    public List<HotelsModel> getAllHotels() {
        return hotelsRepository.getAllHotels();
    }

    @GetMapping("/searchHotelById{hotelId}")
    public HotelsModel getHotelById(@PathVariable int hotelId) {
        HotelsModel hotel = hotelsRepository.getHotelById(hotelId);
        return hotel != null ? hotel : new HotelsModel(); 
    }

    @PutMapping("/updateHotelById{hotelId}")
    public List<HotelsModel> updateHotel(@PathVariable int hotelId, @RequestBody HotelsModel hotel) {
        hotel.setHotel_id(hotelId); 
        boolean updated = hotelsRepository.updateHotel(hotel);

        if (updated) {
            return hotelsRepository.getAllHotels();
        } else {
            return null; 
        }
    }

    @DeleteMapping("deleteHotelById/{hotelId}")
    public String deleteHotel(@PathVariable int hotelId) {
        boolean deleted = hotelsRepository.deleteHotelById(hotelId);
        return deleted ? "Hotel deleted successfully" : "Failed to delete hotel";
    }
    
}
